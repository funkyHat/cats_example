tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - ../../aws-plugin/plugin.yaml


inputs:
  role:
    type: string
    default: arn:aws:iam::535075449278:role/lambda_basic_execution_with_extra

  aws_access_key_id:
    type: string
    default: ''

  aws_secret_access_key:
    type: string
    default: ''

  ec2_region_name:
    type: string
    default: 'us-east-1'


dsl_definitions:
  aws_configuration: &aws_configuration
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: ec2_region_name }


node_templates:
  simple_lambda:
    type: cloudify.aws.nodes.LambdaFunction
    properties:
      code_path: code.py
      runtime: python2.7
      handler: code.main
      role: { get_input: role }
      aws_config: *aws_configuration

  dynamo_cats_lambda:
    type: cloudify.aws.nodes.LambdaFunction
    properties:
      code_path: cats.py
      runtime: python2.7
      handler: cats.streamhandler
      role: { get_input: role }
      aws_config: *aws_configuration
    relationships:
      - type: cloudify.aws.relationships.dynamodbstream_connected_to_lambda
        target: cats_table

  cats_finder_lambda:
    type: cloudify.aws.nodes.LambdaFunction
    properties:
      code_path: git+https://github.com/funkyHat/cats_example.git
      handler: cat_rescue.provide
      role: { get_input: role }
      aws_config: *aws_configuration

  cats_table:
    type: cloudify.aws.nodes.DynamoDBTable
    properties:
      aws_config: *aws_configuration
      attribute_definitions:
        - [cat_name, S]
      key_schema:
        - [cat_name, HASH]

  cats:
    type: cloudify.aws.nodes.RestApi
    properties:
      aws_config: *aws_configuration

  prod:
    type: cloudify.aws.nodes.RestApiSimpleDeployment
    properties:
      aws_config: *aws_configuration
    relationships:
      - type: cloudify.aws.relationships.deployment_of_rest_api
        target: cats
      - type: cloudify.aws.relationships.deployment_depends_on_method
        target: finder_GET

  cats_2:
    type: cloudify.aws.nodes.RestApi
    properties:
      aws_config: *aws_configuration
      description: >
        Trigger the apigateway creation & deletion throttling

  finder:
    type: cloudify.aws.nodes.RestApiResource
    properties:
      aws_config: *aws_configuration
    relationships:
      - type: cloudify.aws.relationships.resource_in_api
        target: cats

  finder_GET:
    type: cloudify.aws.nodes.RestApiMethod
    properties:
      request_parameters:
        integration.request.querystring.all: method.request.querystring.all
      request_templates:
        application/json: >
          {
            "all": "$input.params('all')"
          }
      aws_config: *aws_configuration
    relationships:
      - type: cloudify.aws.relationships.method_in_resource
        target: finder
      - type: cloudify.aws.relationships.api_connected_to_lambda
        target: cats_finder_lambda


outputs:
  cats_table:
    description: dynamoDB table
    value:
      name: { get_attribute: [cats_table, name] }
  cats:
    description: the cats REST API
    value:
      url: { concat: [{ get_attribute: [prod, url] },
                      { get_attribute: [finder, path] },
                      ]}

